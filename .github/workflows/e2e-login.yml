name: üé≠ E2E Login Test

on:
  push:
    branches: main
  pull_request:
    branches: main
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to test against'
        required: true
        default: 'main'
        type: string
      environment:
        description: 'Environment to test'
        required: true
        default: 'localhost'
        type: choice
        options:
          - localhost
          # - preview
          # - production

jobs:
  test-e2e-login:
    name: üß™ Run E2E login tests
    runs-on: ubuntu-latest
    timeout-minutes: 60

    env:
      TEST_GITHUB_USERNAME: ${{ secrets.TEST_GITHUB_USERNAME }}
      TEST_GITHUB_PASSWORD: ${{ secrets.TEST_GITHUB_PASSWORD }}
      PLAYWRIGHT_BASE_URL: ${{ github.event_name == 'workflow_dispatch' && (github.event.inputs.environment == 'localhost' && 'http://localhost:3000' || github.event.inputs.environment == 'preview' && 'https://omnilens-git-main-christopher-zeuchs-projects.vercel.app' || 'https://www.omnilens.xyz') || 'http://localhost:3000' }}
      NODE_ENV: test
      # Database environment variables
      DB_HOST: localhost
      DB_USER: ${{ secrets.DB_USER }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_PORT: 5432

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      
    - name: üì• Checkout code
      uses: actions/checkout@v5
      with:
        ref: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.branch || github.ref }}

    - name: üçû Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest

    - name: üß∞ Install dependencies
      run: bun install

    - name: üé≠ Install Playwright Browsers
      run: bunx playwright install --with-deps chromium

    - name: üóÑÔ∏è Setup database schema (localhost only)
      if: github.event_name != 'workflow_dispatch' || github.event.inputs.environment == 'localhost'
      run: |
        # Install PostgreSQL client
        sudo apt-get update
        sudo apt-get install -y postgresql-client
        
        # Wait for PostgreSQL to be ready
        sleep 5
        
        # Create database schema
        psql -h $DB_HOST -U $DB_USER -d $DB_NAME -f lib/schema.sql
      env:
        PGPASSWORD: ${{ secrets.DB_PASSWORD }}

    - name: üöÄ Start development server (localhost only)
      if: github.event_name != 'workflow_dispatch' || github.event.inputs.environment == 'localhost'
      run: |
        # Start server in background with environment variables
        bun run dev &
        sleep 30  # Wait for server to start
      env:
        GITHUB_CLIENT_ID: ${{ secrets.GH_CLIENT_ID }}
        GITHUB_CLIENT_SECRET: ${{ secrets.GH_CLIENT_SECRET }}
        BETTER_AUTH_SECRET: ${{ secrets.BETTER_AUTH_SECRET }}
        BETTER_AUTH_URL: http://localhost:3000
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_HOST: localhost
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_PORT: 5432
        NODE_ENV: test

    - name: üß™ Run E2E login tests
      run: cd e2e && bun run ci:local:login --project=${{ github.event_name == 'workflow_dispatch' && github.event.inputs.environment || 'localhost' }}
      env:
        TEST_GITHUB_USERNAME: ${{ secrets.TEST_GITHUB_USERNAME }}
        TEST_GITHUB_PASSWORD: ${{ secrets.TEST_GITHUB_PASSWORD }}
        PLAYWRIGHT_BASE_URL: ${{ env.PLAYWRIGHT_BASE_URL }}

    - name: üì§ Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ github.event_name == 'workflow_dispatch' && github.event.inputs.environment || 'localhost' }}
        path: |
          e2e/playwright-report/
          e2e/test-results/
        retention-days: 30

    - name: üìπ Upload videos
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: playwright-videos-${{ github.event_name == 'workflow_dispatch' && github.event.inputs.environment || 'localhost' }}
        path: e2e/test-results/
        retention-days: 30
